{
	"name": "Dataflow Aggregate Data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NYCPayrollData_SQLDB_DS",
						"type": "DatasetReference"
					},
					"name": "NYCPayrollCurrentYear"
				},
				{
					"dataset": {
						"referenceName": "NYCPayroll_2020_Data_DS",
						"type": "DatasetReference"
					},
					"name": "NYCPayrollHistory2020"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "NYC_Payroll_Summary",
						"type": "DatasetReference"
					},
					"name": "NYCPayrollSummarySink"
				}
			],
			"transformations": [
				{
					"name": "union2Datasets"
				},
				{
					"name": "filterByFiscalYear"
				},
				{
					"name": "DeriveTotalPaid"
				},
				{
					"name": "AggregateTotalPaid"
				}
			],
			"scriptLines": [
				"parameters{",
				"     fiscalyear as integer (2020)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> NYCPayrollCurrentYear",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> NYCPayrollHistory2020",
				"NYCPayrollCurrentYear, NYCPayrollHistory2020 union(byName: true)~> union2Datasets",
				"union2Datasets filter(toInteger(FiscalYear) >= $fiscalyear) ~> filterByFiscalYear",
				"filterByFiscalYear derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> DeriveTotalPaid",
				"DeriveTotalPaid aggregate(groupBy(AgencyName,",
				"          FiscalYear),",
				"     TotalPaid = sum(TotalPaid)) ~> AggregateTotalPaid",
				"AggregateTotalPaid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as string,",
				"          AgencyName as string,",
				"          TotalPaid as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> NYCPayrollSummarySink"
			]
		}
	}
}